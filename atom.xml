<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>廖英杰的博客</title>
  
  <subtitle>学习+随笔</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-25T06:56:34.082Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>liaoyingjie</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【网络自动化】自动化生产防火墙策略</title>
    <link href="http://example.com/2021/04/25/%E3%80%90%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96%E3%80%91%E8%87%AA%E5%8A%A8%E5%8C%96%E7%94%9F%E4%BA%A7%E9%98%B2%E7%81%AB%E5%A2%99%E7%AD%96%E7%95%A5/"/>
    <id>http://example.com/2021/04/25/%E3%80%90%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96%E3%80%91%E8%87%AA%E5%8A%A8%E5%8C%96%E7%94%9F%E4%BA%A7%E9%98%B2%E7%81%AB%E5%A2%99%E7%AD%96%E7%95%A5/</id>
    <published>2021-04-25T06:38:08.243Z</published>
    <updated>2021-04-25T06:56:34.082Z</updated>
    
    <content type="html"><![CDATA[<h2 id="【网络自动化】主要记录日常工作中常用的python脚本"><a href="#【网络自动化】主要记录日常工作中常用的python脚本" class="headerlink" title="【网络自动化】主要记录日常工作中常用的python脚本"></a>【网络自动化】主要记录日常工作中常用的python脚本</h2><p>python脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line">__author__ = <span class="string">&#x27;liaoyingjie&#x27;</span></span><br><span class="line">__email__ = <span class="string">&#x27;lyjiwy@163.com&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于现网同一台防火墙接入太多zone，实现自动只生成相应防火墙的策略较负责，所以后续开发</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> FileSystemLoader, Environment</span><br><span class="line"><span class="keyword">import</span> yaml  <span class="comment">#FullLoader需要注意PyYAML的版本要求 &gt;5.1.1</span></span><br><span class="line"><span class="keyword">import</span> os , time</span><br><span class="line"><span class="keyword">from</span> IPy <span class="keyword">import</span> IP</span><br><span class="line"></span><br><span class="line"><span class="comment">#规划IP ZONE</span></span><br><span class="line">dmz  = (<span class="string">&#x27;192.168.1.0/24&#x27;</span>,<span class="string">&#x27;192.168.2.0/24&#x27;</span>)</span><br><span class="line">nw  = (<span class="string">&#x27;192.168.10.0/24&#x27;</span>,<span class="string">&#x27;192.168.11.0/24&#x27;</span>)</span><br><span class="line">wlw  = (<span class="string">&#x27;192.168.20.0/24&#x27;</span>,<span class="string">&#x27;192.168.21.0/24&#x27;</span>)</span><br><span class="line">office  = (<span class="string">&#x27;192.168.30.0/24&#x27;</span>,<span class="string">&#x27;192.168.31.0/24&#x27;</span>)</span><br><span class="line"></span><br><span class="line">all_ip = &#123;<span class="string">&#x27;dmz&#x27;</span>:dmz,</span><br><span class="line">          <span class="string">&#x27;nw&#x27;</span>:nw,</span><br><span class="line">          <span class="string">&#x27;wlw&#x27;</span>:wlw,</span><br><span class="line">          <span class="string">&#x27;office&#x27;</span>:office&#125;</span><br><span class="line"></span><br><span class="line">junos_port = (<span class="string">&#x27;80&#x27;</span>,<span class="string">&#x27;22&#x27;</span>,<span class="string">&#x27;443&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#文件管理</span></span><br><span class="line">project_dir = os.path.dirname(os.path.abspath(__file__)) <span class="comment">#mac上</span></span><br><span class="line">time_now = time.strftime(<span class="string">&quot;%Y%m%d-%H%M&quot;</span>, time.localtime())</span><br><span class="line">output_path = project_dir + <span class="string">&#x27;/&#x27;</span> + time_now</span><br><span class="line"><span class="comment"># print(path)</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_path):</span><br><span class="line">    os.makedirs(output_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将防火墙策略的csv文件生产yaml文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">excel_to_yaml</span>(<span class="params">excel_filename</span>):</span></span><br><span class="line">    ctr = <span class="number">0</span></span><br><span class="line">    yaml_filename = excel_filename.replace(<span class="string">&#x27;.csv&#x27;</span>, <span class="string">&#x27;_config.yaml&#x27;</span>)</span><br><span class="line">    policy = &#123;&#125;</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(excel_filename, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> excel_csv:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> excel_csv:</span><br><span class="line">            <span class="keyword">if</span> ctr == <span class="number">0</span>:</span><br><span class="line">                ctr+=<span class="number">1</span>  <span class="comment"># 跳过第一行</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># save the csv as a dictionary</span></span><br><span class="line"></span><br><span class="line">                src_ip,dst_ip,service,policy_id = line.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>).strip().split(<span class="string">&#x27;,&#x27;</span>) <span class="comment">#去掉空格，然后按照，号分割</span></span><br><span class="line">                <span class="comment"># 后续完善使用junos自定义的 端口</span></span><br><span class="line">                <span class="comment"># if service in junos_port:</span></span><br><span class="line">                <span class="comment">#     if int(service) == 80:</span></span><br><span class="line">                <span class="comment">#         service = &#x27;junos-http&#x27;</span></span><br><span class="line">                <span class="comment">#判断IP所属zone</span></span><br><span class="line">                <span class="keyword">for</span> key <span class="keyword">in</span> all_ip:</span><br><span class="line">                    ip_zone = all_ip[key]</span><br><span class="line">                    <span class="keyword">for</span> ip1 <span class="keyword">in</span> ip_zone:</span><br><span class="line">                        <span class="keyword">if</span> IP(src_ip) <span class="keyword">in</span> IP(ip1):</span><br><span class="line">                            src_zone = key</span><br><span class="line">                <span class="keyword">for</span> key <span class="keyword">in</span> all_ip:</span><br><span class="line">                    ip_zone = all_ip[key]</span><br><span class="line">                    <span class="keyword">for</span> ip1 <span class="keyword">in</span> ip_zone:</span><br><span class="line">                        <span class="keyword">if</span> IP(dst_ip) <span class="keyword">in</span> IP(ip1):</span><br><span class="line">                            dst_zone = key</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    device = (<span class="string">&#x27;null&#x27;</span>)</span><br><span class="line">                policy[policy_id] = &#123;<span class="string">&#x27;device&#x27;</span>:device,<span class="string">&#x27;src_zone&#x27;</span>:src_zone, <span class="string">&#x27;src_ip&#x27;</span>: src_ip, <span class="string">&#x27;dst_zone&#x27;</span>:dst_zone, <span class="string">&#x27;dst_ip&#x27;</span>: dst_ip, <span class="string">&#x27;service&#x27;</span>: service,<span class="string">&#x27;policy_id&#x27;</span>:policy_id&#125;</span><br><span class="line">                <span class="built_in">print</span>(policy[policy_id])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(output_path,yaml_filename), <span class="string">&quot;w+&quot;</span>) <span class="keyword">as</span> yf :</span><br><span class="line">        <span class="comment"># yf.write(&quot;policy: \n&quot;)</span></span><br><span class="line">        <span class="keyword">for</span> u <span class="keyword">in</span> policy:</span><br><span class="line">            yf.write(<span class="string">f&quot;  <span class="subst">&#123;u&#125;</span> : \n&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> k,v <span class="keyword">in</span> policy[u].items():            yf.write(<span class="string">f&quot;    <span class="subst">&#123;k&#125;</span> : <span class="subst">&#123;v&#125;</span>\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#根据j2和</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">j2_to_config</span>(<span class="params">j2_filename</span>):</span></span><br><span class="line">    file = j2_filename.replace(<span class="string">&#x27;.j2&#x27;</span>, <span class="string">&#x27;.txt&#x27;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(output_path,file), <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> config_file:</span><br><span class="line">        <span class="keyword">for</span> policy <span class="keyword">in</span> policy_configs.items():</span><br><span class="line">            <span class="comment"># print(policy)</span></span><br><span class="line">            config_rendered = policy_env.get_template(j2_filename).render(policy[<span class="number">1</span>])</span><br><span class="line">            <span class="comment"># print(config_rendered)</span></span><br><span class="line">            config_file.write(config_rendered)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">excel_to_yaml(<span class="string">&quot;policy.csv&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(output_path, <span class="string">&quot;policy_config.yaml&quot;</span>), <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> policy_configs:</span><br><span class="line">    policy_configs = yaml.load(policy_configs,Loader=yaml.FullLoader)  <span class="comment"># This is to read the file content</span></span><br><span class="line">    <span class="comment"># print(policy_configs.items())</span></span><br><span class="line">policy_env = Environment(</span><br><span class="line">    loader=FileSystemLoader(project_dir),</span><br><span class="line">    trim_blocks=<span class="literal">True</span>,</span><br><span class="line">    lstrip_blocks=<span class="literal">True</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">j2_to_config(<span class="string">&quot;policy_config_junos.j2&quot;</span>)</span><br><span class="line">j2_to_config(<span class="string">&quot;policy_config_hillstone.j2&quot;</span>)</span><br><span class="line">j2_to_config(<span class="string">&quot;policy_config_h3c.j2&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># def main():</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># if __name__ == &#x27;__main__&#x27;:</span></span><br><span class="line"><span class="comment">#     main()</span></span><br></pre></td></tr></table></figure><p>需求模板：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!  ../policy.csv</span></span><br><span class="line"><span class="string">源IP,目的IP,端口,策略名</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span><span class="string">/32,192.168.0.1/32,8010,20210406test1</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.20</span><span class="number">.2</span><span class="string">/32,192.168.10.1/32,8070,20210406test2</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.30</span><span class="number">.3</span><span class="string">/32,192.168.1.1/32,8080,20210406test3</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.40</span><span class="number">.4</span><span class="string">/32,192.168.20.1/32,80,20210406test4</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.50</span><span class="number">.5</span><span class="string">/32,192.168.30.1/32,443,20210406test5</span></span><br></pre></td></tr></table></figure><p>juniper防火墙策略模板：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;# policy_config_junos.j2 #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% if policy_id %&#125;</span><br><span class="line">set security policies from-zone &#123;&#123;src_zone&#125;&#125; to-zone &#123;&#123;dst_zone&#125;&#125; policy &#123;&#123;policy_id&#125;&#125; match source-address &#123;&#123;src_ip&#125;&#125;</span><br><span class="line">set security policies from-zone &#123;&#123;src_zone&#125;&#125; to-zone &#123;&#123;dst_zone&#125;&#125; policy &#123;&#123;policy_id&#125;&#125; match destination-address &#123;&#123;dst_ip&#125;&#125;</span><br><span class="line">set security policies from-zone &#123;&#123;src_zone&#125;&#125; to-zone &#123;&#123;dst_zone&#125;&#125; policy &#123;&#123;policy_id&#125;&#125; match application tcp_&#123;&#123;service&#125;&#125;</span><br><span class="line">set security policies from-zone &#123;&#123;src_zone&#125;&#125; to-zone &#123;&#123;dst_zone&#125;&#125; policy &#123;&#123;policy_id&#125;&#125; then permit</span><br><span class="line">set security address-book &#123;&#123;src_zone&#125;&#125; address &#123;&#123;src_ip&#125;&#125; &#123;&#123;src_ip&#125;&#125;</span><br><span class="line">set security address-book &#123;&#123;dst_zone&#125;&#125; address &#123;&#123;dst_ip&#125;&#125; &#123;&#123;dst_ip&#125;&#125;</span><br><span class="line">set applications application tcp_&#123;&#123;service&#125;&#125; protocol tcp source-port 0-65535 destination-port &#123;&#123;service&#125;&#125;-&#123;&#123;service&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>生成对应的策略如下：</p><p><img src="%E3%80%90%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96%E3%80%91%E8%87%AA%E5%8A%A8%E5%8C%96%E7%94%9F%E4%BA%A7%E9%98%B2%E7%81%AB%E5%A2%99%E7%AD%96%E7%95%A5/image-20210425145152962.png" alt="image-20210425145152962"></p><p>山石hillstone防火墙策略模板：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;# policy_config_hillstone.j2 #&#125;</span><br><span class="line">&#123;% if policy_id %&#125;</span><br><span class="line">service &quot;tcp_&#123;&#123;service&#125;&#125;&quot;</span><br><span class="line">  tcp dst-port &#123;&#123;service&#125;&#125;</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">address &#123;&#123;src_ip&#125;&#125;</span><br><span class="line">  address &#123;&#123;src_ip&#125;&#125;</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">address &#123;&#123;dst_ip&#125;&#125;</span><br><span class="line">  address &#123;&#123;dst_ip&#125;&#125;</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">rule</span><br><span class="line">  action permit</span><br><span class="line">  src-zone &quot;&#123;&#123;src_zone&#125;&#125;&quot;&quot;</span><br><span class="line">  dst-zone &quot;&#123;&#123;dst_zone&#125;&#125;&quot;</span><br><span class="line">  src-ip &#123;&#123;src_ip&#125;&#125;</span><br><span class="line">  dst-ip &#123;&#123;dst_ip&#125;&#125;</span><br><span class="line">  service tcp_&#123;&#123;service&#125;&#125;</span><br><span class="line">  name &quot;&quot;&#123;&#123;policy_id&#125;&#125;&quot;</span><br><span class="line">exit</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>生成对应的策略：<br><img src="/Users/liao/study/hexo/source/_posts/%E3%80%90%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96%E3%80%91%E8%87%AA%E5%8A%A8%E5%8C%96%E7%94%9F%E4%BA%A7%E9%98%B2%E7%81%AB%E5%A2%99%E7%AD%96%E7%95%A5/image-20210425145251918.png" alt="image-20210425145251918"></p><p>H3C防火墙策略模板：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;# policy_config_h3c.j2 #&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if policy_id %&#125;</span><br><span class="line">rule permit tcp source &#123;&#123;src_ip&#125;&#125; 0 destination &#123;&#123;dst_ip&#125;&#125; 0 destination-port eq &#123;&#123;service&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>生成对应的策略：</p><p><img src="/Users/liao/study/hexo/source/_posts/%E3%80%90%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96%E3%80%91%E8%87%AA%E5%8A%A8%E5%8C%96%E7%94%9F%E4%BA%A7%E9%98%B2%E7%81%AB%E5%A2%99%E7%AD%96%E7%95%A5/image-20210425145430412.png" alt="image-20210425145430412"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;【网络自动化】主要记录日常工作中常用的python脚本&quot;&gt;&lt;a href=&quot;#【网络自动化】主要记录日常工作中常用的python脚本&quot; class=&quot;headerlink&quot; title=&quot;【网络自动化】主要记录日常工作中常用的python脚本&quot;&gt;&lt;/a&gt;【网络自动</summary>
      
    
    
    
    <category term="【网络自动化】" scheme="http://example.com/categories/%E3%80%90%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96%E3%80%91/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="H3C、Juniper、山石hillstone" scheme="http://example.com/tags/H3C%E3%80%81Juniper%E3%80%81%E5%B1%B1%E7%9F%B3hillstone/"/>
    
  </entry>
  
  <entry>
    <title>【salt入门到实战】1-初始安装</title>
    <link href="http://example.com/2021/04/25/%E3%80%90salt%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E6%88%98%E3%80%911-%E5%88%9D%E5%A7%8B%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2021/04/25/%E3%80%90salt%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E6%88%98%E3%80%911-%E5%88%9D%E5%A7%8B%E5%AE%89%E8%A3%85/</id>
    <published>2021-04-25T03:04:38.000Z</published>
    <updated>2021-04-25T06:20:36.312Z</updated>
    
    
    
    
    <category term="【salt入门到实战】" scheme="http://example.com/categories/%E3%80%90salt%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E6%88%98%E3%80%91/"/>
    
    
    <category term="安装" scheme="http://example.com/tags/%E5%AE%89%E8%A3%85/"/>
    
    <category term="salt" scheme="http://example.com/tags/salt/"/>
    
  </entry>
  
  <entry>
    <title>【Linux使用】压缩和解压缩</title>
    <link href="http://example.com/2021/04/23/%E3%80%90Linux%E4%BD%BF%E7%94%A8%E3%80%91-%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/"/>
    <id>http://example.com/2021/04/23/%E3%80%90Linux%E4%BD%BF%E7%94%A8%E3%80%91-%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/</id>
    <published>2021-04-23T07:58:03.394Z</published>
    <updated>2021-04-25T06:20:37.956Z</updated>
    
    <content type="html"><![CDATA[<ul><li>压缩文件&amp;远程传输<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#压缩文佳</span></span><br><span class="line">tar <span class="literal">-zcvf</span> dest.tar.gz dest/</span><br><span class="line"><span class="comment">#解压到指定目录</span></span><br><span class="line">tar <span class="literal">-zxvf</span> dest.tar.gz <span class="literal">-C</span> /tmp/dest/ </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">yum install nc</span><br><span class="line"><span class="comment">#接收端</span></span><br><span class="line">nc <span class="literal">-l</span> <span class="number">40000</span> | tar <span class="literal">-zxvf</span> -</span><br><span class="line"><span class="comment">#发送端</span></span><br><span class="line">tar <span class="literal">-zcvf</span> - sjpt22.dmp | nc <span class="number">10.1</span>.<span class="number">22.121</span> <span class="number">40000</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;压缩文件&amp;amp;远程传输&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="【Linux使用】" scheme="http://example.com/categories/%E3%80%90Linux%E4%BD%BF%E7%94%A8%E3%80%91/"/>
    
    
    <category term="nc" scheme="http://example.com/tags/nc/"/>
    
    <category term="压缩" scheme="http://example.com/tags/%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>【Linux使用】-文本编辑</title>
    <link href="http://example.com/2021/04/23/%E3%80%90Linux%E4%BD%BF%E7%94%A8%E3%80%91-%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/"/>
    <id>http://example.com/2021/04/23/%E3%80%90Linux%E4%BD%BF%E7%94%A8%E3%80%91-%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/</id>
    <published>2021-04-23T07:39:58.280Z</published>
    <updated>2021-04-25T06:20:37.323Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vim操作"><a href="#vim操作" class="headerlink" title="vim操作"></a>vim操作</h1><p>linux命令行执行命令时，快速移动光标可节省不少时间，如下是快速移动光标的快捷键：</p><p>1、光标快速切换到行尾行首</p><pre><code> ctrl+a 行首 ctrl+e 行尾</code></pre><p>2、删除至行尾</p><pre><code>  ctrl+k</code></pre><p>3、删除命令行的命令</p><pre><code> *命令行显示的命令是最后一个命令时，直接下箭头即可 *命令行显示的命令是中间的命令时,只需两步：   ctrl+a行首；ctrl+k 删除光标所在处的字符</code></pre><p>4、左|右移动一个单词、字母</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Esc b 左移一个单词[back]</span><br><span class="line">Esc f 右移一个单词[forward]</span><br><span class="line">ctrl b 左移一个字母</span><br><span class="line">ctrl f 右移一个字母</span><br></pre></td></tr></table></figure><h1 id="nano操作"><a href="#nano操作" class="headerlink" title="nano操作"></a>nano操作</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctrl +k   剪切</span><br><span class="line">ctrl +u   复制</span><br></pre></td></tr></table></figure><!--  -->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vim操作&quot;&gt;&lt;a href=&quot;#vim操作&quot; class=&quot;headerlink&quot; title=&quot;vim操作&quot;&gt;&lt;/a&gt;vim操作&lt;/h1&gt;&lt;p&gt;linux命令行执行命令时，快速移动光标可节省不少时间，如下是快速移动光标的快捷键：&lt;/p&gt;
&lt;p&gt;1、光标快速切换</summary>
      
    
    
    
    <category term="【Linux使用】" scheme="http://example.com/categories/%E3%80%90Linux%E4%BD%BF%E7%94%A8%E3%80%91/"/>
    
    
    <category term="nano" scheme="http://example.com/tags/nano/"/>
    
    <category term="vim" scheme="http://example.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>【hexo】-安装使用汇总</title>
    <link href="http://example.com/2021/04/23/%E3%80%90hexo%E3%80%91-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%B1%87%E6%80%BB/"/>
    <id>http://example.com/2021/04/23/%E3%80%90hexo%E3%80%91-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%B1%87%E6%80%BB/</id>
    <published>2021-04-23T05:51:30.153Z</published>
    <updated>2021-04-25T06:19:50.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官方"><a href="#官方" class="headerlink" title="官方:"></a>官方:</h1><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server  //hexo s</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate  //hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy    //hexo d</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="常用组合"><a href="#常用组合" class="headerlink" title="常用组合"></a>常用组合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo clean &amp; hexo s -P 5000</span><br><span class="line">$hexo d -g</span><br></pre></td></tr></table></figure><h2 id="hexo使用错误汇总"><a href="#hexo使用错误汇总" class="headerlink" title="hexo使用错误汇总"></a>hexo使用错误汇总</h2><h3 id="1-更换主题后，本地显示正常，github显示依然为原有主题："><a href="#1-更换主题后，本地显示正常，github显示依然为原有主题：" class="headerlink" title="1.更换主题后，本地显示正常，github显示依然为原有主题："></a>1.更换主题后，本地显示正常，github显示依然为原有主题：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">中途更换过主题，在public目录下生成的静态文件可能混乱了，我使用下面的步骤重新生成后解决了。</span><br><span class="line">先删除public目录</span><br><span class="line">npm install hexo</span><br><span class="line">npm install</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h3 id="2-文本字符"><a href="#2-文本字符" class="headerlink" title="2.文本字符"></a>2.文本字符</h3><p>文章标记劲量不适用英文字符如[]，建议使用中文【】。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官方&quot;&gt;&lt;a href=&quot;#官方&quot; class=&quot;headerlink&quot; title=&quot;官方:&quot;&gt;&lt;/a&gt;官方:&lt;/h1&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very fi</summary>
      
    
    
    
    <category term="【hexo】" scheme="http://example.com/categories/%E3%80%90hexo%E3%80%91/"/>
    
    
    <category term="文档编辑" scheme="http://example.com/tags/%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91/"/>
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
</feed>
